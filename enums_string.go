// Code generated by "stringer -type=OrderType,OrderSide,StopOrderType,TimeInForceOption,SelfTradePreventionFlag -linecomment -output enums_string.go"; DO NOT EDIT.

package coinbasepro

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LimitOrder-0]
	_ = x[MarketOrder-1]
}

const _OrderType_name = "limitmarket"

var _OrderType_index = [...]uint8{0, 5, 11}

func (i OrderType) String() string {
	if i >= OrderType(len(_OrderType_index)-1) {
		return "OrderType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OrderType_name[_OrderType_index[i]:_OrderType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BuyOrder-0]
	_ = x[SellOrder-1]
}

const _OrderSide_name = "buysell"

var _OrderSide_index = [...]uint8{0, 3, 7}

func (i OrderSide) String() string {
	if i >= OrderSide(len(_OrderSide_index)-1) {
		return "OrderSide(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OrderSide_name[_OrderSide_index[i]:_OrderSide_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StopLoss-0]
	_ = x[StopEntry-1]
}

const _StopOrderType_name = "lossentry"

var _StopOrderType_index = [...]uint8{0, 4, 9}

func (i StopOrderType) String() string {
	if i >= StopOrderType(len(_StopOrderType_index)-1) {
		return "StopOrderType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StopOrderType_name[_StopOrderType_index[i]:_StopOrderType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GTC-0]
	_ = x[GTT-1]
	_ = x[IOC-2]
	_ = x[FOK-3]
}

const _TimeInForceOption_name = "GTCGTTIOCFOK"

var _TimeInForceOption_index = [...]uint8{0, 3, 6, 9, 12}

func (i TimeInForceOption) String() string {
	if i >= TimeInForceOption(len(_TimeInForceOption_index)-1) {
		return "TimeInForceOption(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TimeInForceOption_name[_TimeInForceOption_index[i]:_TimeInForceOption_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DC-0]
	_ = x[CO-1]
	_ = x[CN-2]
	_ = x[CB-3]
}

const _SelfTradePreventionFlag_name = "dccocncb"

var _SelfTradePreventionFlag_index = [...]uint8{0, 2, 4, 6, 8}

func (i SelfTradePreventionFlag) String() string {
	if i >= SelfTradePreventionFlag(len(_SelfTradePreventionFlag_index)-1) {
		return "SelfTradePreventionFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SelfTradePreventionFlag_name[_SelfTradePreventionFlag_index[i]:_SelfTradePreventionFlag_index[i+1]]
}
